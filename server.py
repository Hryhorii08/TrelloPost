import requests
from flask import Flask, request, jsonify

app = Flask(__name__)

# üîπ –î–ê–ù–ù–´–ï TRELLO (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏)
TRELLO_API_KEY = "5880197335c3d727693408202c68375d"
TRELLO_TOKEN = "ATTA1ea4c6edf0b2892fec32580ab1417a42f521cd70c11af1453ddd0a4956e72896C175BE4E"
TRELLO_LIST_ID = "67c19cd6641117e44ae95227"

# üîπ –î–ê–ù–ù–´–ï TELEGRAM (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏)
TELEGRAM_BOT_TOKEN = "7788946008:AAGULYh-GIkpr-GA3ZA70ERdCAT6BcGNW-g"
TELEGRAM_CHAT_ID = "-1002307069728"

# üîπ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –≤ Trello
def create_trello_card(name, course, age, city):
    url = "https://api.trello.com/1/cards"
    query = {
        "name": f"–ó–∞—è–≤–∫–∞ –æ—Ç {name}",
        "desc": f"–ö—É—Ä—Å: {course}\n–í–æ–∑—Ä–∞—Å—Ç: {age}\n–ì–æ—Ä–æ–¥: {city}",
        "idList": TRELLO_LIST_ID,
        "key": TRELLO_API_KEY,
        "token": TRELLO_TOKEN
    }
    response = requests.post(url, params=query)
    return response.status_code, response.json()

# üîπ –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –≤ Telegram
def send_to_telegram(name, course, age, city):
    message = f"üìå *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:*\nüë§ –ò–º—è: {name}\nüìö –ö—É—Ä—Å: {course}\nüéÇ –í–æ–∑—Ä–∞—Å—Ç: {age}\nüåç –ì–æ—Ä–æ–¥: {city}"
    url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
    data = {
        "chat_id": TELEGRAM_CHAT_ID,
        "text": message,
        "parse_mode": "Markdown"
    }
    response = requests.post(url, json=data)
    return response.status_code, response.json()

# üîπ API-—ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏
@app.route("/send_to_trello", methods=["POST"])
def send_to_trello():
    data = request.json
    name = data.get("name")
    course = data.get("course")
    age = data.get("age")
    city = data.get("city")

    if not all([name, course, age, city]):
        return jsonify({"error": "–ù–µ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã"}), 400

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Trello
    trello_status, trello_response = create_trello_card(name, course, age, city)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
    tg_status, tg_response = send_to_telegram(name, course, age, city)

    if trello_status == 200 and tg_status == 200:
        return jsonify({"message": "–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Trello –∏ Telegram"})
    else:
        return jsonify({
            "error": "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏",
            "trello_status": trello_status,
            "trello_response": trello_response,
            "telegram_status": tg_status,
            "telegram_response": tg_response
        }), 500

# üîπ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
